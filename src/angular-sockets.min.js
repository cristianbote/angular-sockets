/**
  * Angular sockets module
  * This module helps bringing in the sockets, as a native extension of angularjs.
  * @author: Cristian Bote
  *
  * License: MIT, 2014
  */

!function(e,n){"use strict";n.module("ngSockets",[]).provider("$sockets",function(){var n={server:null,scope:null,started:!1,handlers:{onopen:null,onmessage:null,onclose:null},model:{type:"message",ip:null,data:null},ws:e.WebSocket||e.MozWebSocket},o=this,s=null;this.setup=function(e){n.handlers=t.objectCopy(n.handlers,e.handlers),n.scope=e.scope||n.scope,n.server=e.server||n.server,n.server&&!n.started&&o.init()},this.getModel=function(e,t){return n.model.type=t||n.model.type,n.model.ip=s,n.model.data=e,JSON.stringify(n.model)},this.init=function(){n.connection=new n.ws(n.server);for(var e in n.handlers)!function(e){n.connection[e]=function(t){var o=t.data&&-1!==t.data.indexOf("{")?JSON.parse(t.data):t.data;n.scope&&n.scope.$broadcast("$sockets:"+e,o),"function"==typeof n.handlers[e]&&n.handlers[e](o),o&&o.ip&&!s&&(s=o.ip)}}(e);n.started=!0},this.$get=function(){return{setup:o.setup,send:function(e,t){if(n.connection&&1===n.connection.readyState){var s=o.getModel(e,t);return n.connection.send(s),JSON.parse(s)}}}}});var t={objectCopy:function(e,n){for(var t in n)e[t]=n[t];return e}}}(window,window.angular);